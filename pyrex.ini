# Pyrex User Configuration
#
# The following variables are made available as variable expansions when
# Pyrex is initialized:
#   ${build:builddir}       The absolute path to the build directory
#   ${build:oeroot}         The absolute path to the top level Open Embedded
#                           directory (e.g. $PYREX_OEROOT)
#   ${build:pyrexroot}      The absolute path to Pyrex (e.g. $PYREX_ROOT)
#

# Pyrex build information. Any changes to this section will require
# reinitializing the build environment to take effect.
[pyrex]
# The version of Pyrex this config is written against. This option is required
# to be specified in the user config file
version = @VERSION@

# The location of the temporary Pyrex shim files and build configuration
tempdir = ${build:builddir}/pyrex

# A list of globs for commands that should be wrapped by Pyrex
%commands =
%    ${build:oeroot}/bitbake/bin/*
%    ${build:oeroot}/scripts/*


# The docker executable to use
%dockerpath = docker

# As a convenience, the name of a Pyrex provided Docker image
# can be specified here
%dockerimage = ubuntu-16.04

# The Dockerfile used to build the Pyrex image
%dockerfile = ${build:pyrexroot}/docker/${pyrex:dockerimage}/Dockerfile

# The name of the tag given to the Docker image. If you want to keep around
# different Pyrex images simultaneously, each should have a unique tag
%tag = pyrex/${build:username}-${build:groupname}:${pyrex:dockerimage}

# The home directory of the proxy user created in the Docker image. Defaults
# to the same as the user who created the container for convenience, but can be
# changed if that causes problems.
%home = ${env:HOME}

# The Docker registry from which to fetch the base image
%registry = docker.io

# The shell command to run for pyrex-shell
%shell = /bin/bash

# A list of environment variables that should be imported as Pyrex
# configuration variables in the "env" section, e.g. ${env:HOME}. Note that
# environment variables accessed in this way must be set or an error will
# occur. Default values can be assigned by making an "env" section in this file
# and populating it with the default values. Also note that Pyrex will attempt
# to perform variable expansion on the environment variable values, so care
# should be taken
%envimport = HOME

# Runtime Docker options. Changes in this section take effect the next time a
# Pyrex command is run
[docker]
# Should docker be enabled? Can be used to disable using docker for all commands
%enable = 1

# A list of directories that should be bound when running in the Docker image
%bind =
%    ${build:oeroot}

# A list of environment variables that should be propagated to the Docker
# container if set in the parent environment
%envvars =
%    http_proxy
%    https_proxy

# Extra arguments to pass to docker run. For example:
#   --mount type=bind,src=${env:HOME}/.ssh,dst=${env:HOME}/.ssh,readonly
#   --device /dev/kvm
%args =

# Prefix for all Pyrex commands. Useful for debugging. For example:
#   strace -ff -ttt -o strace.log --
%commandprefix =

# Assign default values for environment variables in this section
[env]

